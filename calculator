#! /bin/python3
import code
import sys
import readline
from math import *
import binascii
import struct
import sys, os, readline

histfile = os.path.join(os.environ["HOME"], ".pyhist")

try:
  readline.read_history_file(histfile)

except IOError:
  pass
import atexit

atexit.register(readline.write_history_file, histfile)

del os, histfile

try:
  import readline

except ImportError:
  print("Module readline not available.")

else:
  import rlcompleter
  readline.parse_and_bind("tab: complete")

def float(hex_value):
    byte_string = struct.pack('I', hex_value)
    float_value = struct.unpack('f', byte_string)[0]
    print(float_value)

def float_to_hex(float_value):
    byte_string = struct.pack('f', float_value)
    unsigned_int_value = struct.unpack('I', byte_string)[0]
    hex_value = hex(unsigned_int_value)
    print(hex_value)

class CustomConsole(code.InteractiveConsole):
    def __init__(self, locals=None, filename="<console>"):
        code.InteractiveConsole.__init__(self, locals, filename)
        self.exit_commands = ['q', 'quit', 'exit']

    def interact(self, banner=None):
        try:
            code.InteractiveConsole.interact(self, banner="	Hey, this is the best calculator in the world!", exitmsg="")
        except SystemExit:
            return

    def raw_input(self, prompt='>>>'):
        try:
            readline.set_startup_hook(lambda: readline.insert_text(''))
            user_input = input(prompt)
        finally:
            readline.set_startup_hook()
        if user_input.strip() in self.exit_commands:
            raise SystemExit
        return user_input

console = CustomConsole(locals=locals())
console.interact()
